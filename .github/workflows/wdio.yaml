name: WDIO

on:
  push:
    branches: [main]

  workflow_dispatch:
    inputs:
      NUMBER_OF_RUNNERS:
        required: true
        type: number
        description: How many runners do you want this work flow to use ?
        default: 5

env:
  RUNNERS: ${{ inputs.NUMBER_OF_RUNNERS }}

jobs:
  send-notification-email:
    runs-on: ubuntu-latest

    steps:
      - name: Send Email
        run: |
          echo "Sending Email using node mailer"

  setup-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - name: Set Matrix
        id: set-matrix
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          RNERS=${{ env.RUNNERS }}
          echo "matrix=[$(seq -s, 1 $RNERS)]" | sed 's/,$//' >> "$GITHUB_OUTPUT"

  run-scripts:
    needs: setup-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        runner: ${{fromJson(needs.setup-matrix.outputs.matrix)}}

    steps:
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Checkout Code
        uses: actions/checkout@v4
      
      - name: Install Dependencies
        run: npm install

      - name: Run WDIO Scripts
        run: npm run wdio -- --shard=${{ matrix.runner }}/5

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          path: allure-results
          name: allure-results-${{ github.run_id }}-${{ matrix.runner }}

  generate-report:
    needs: run-scripts
    runs-on: ubuntu-latest

    steps:
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Install Dependencies
        run: npm install -g allure-commandline

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: results

      - name: Dump all artifacts into allure-results directory
        run: |
          mkdir -p allure-results
          find results -type f -exec cp {} allure-results \;
          ls -la results
          ls -la allure-results

      - name: Generate Report
        run: npx allure generate allure-results --clean -o allure-report

      - name: Upload Report
        uses: actions/upload-artifact@v4
        with:
          path: allure-report
          name: allure-report    
          
  send-report-link-email:
    needs: generate-report
    runs-on: ubuntu-latest

    steps:
      - name: Send Email 
        run: echo "send email containing report link"
        